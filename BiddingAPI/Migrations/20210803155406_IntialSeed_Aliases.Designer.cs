// <auto-generated />
using System;
using BiddingAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BiddingAPI.Migrations
{
    [DbContext(typeof(BiddingDbContext))]
    [Migration("20210803155406_IntialSeed_Aliases")]
    partial class IntialSeed_Aliases
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BiddingAPI.Models.Alias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AliasId")
                        .HasColumnType("int");

                    b.Property<int>("ProdId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Aliases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AliasId = 1,
                            ProdId = 1,
                            UserId = new Guid("facab1fe-5e83-4301-bd85-015ede8c9458")
                        },
                        new
                        {
                            Id = 2,
                            AliasId = 2,
                            ProdId = 1,
                            UserId = new Guid("0c278933-2e38-4e0a-ae31-c26b6769c869")
                        },
                        new
                        {
                            Id = 3,
                            AliasId = 1,
                            ProdId = 2,
                            UserId = new Guid("facab1fe-5e83-4301-bd85-015ede8c9458")
                        },
                        new
                        {
                            Id = 4,
                            AliasId = 1,
                            ProdId = 3,
                            UserId = new Guid("0933a144-762a-4290-af1a-435e19511232")
                        },
                        new
                        {
                            Id = 5,
                            AliasId = 1,
                            ProdId = 4,
                            UserId = new Guid("facab1fe-5e83-4301-bd85-015ede8c9458")
                        },
                        new
                        {
                            Id = 6,
                            AliasId = 2,
                            ProdId = 3,
                            UserId = new Guid("0c278933-2e38-4e0a-ae31-c26b6769c869")
                        },
                        new
                        {
                            Id = 7,
                            AliasId = 1,
                            ProdId = 1,
                            UserId = new Guid("facab1fe-5e83-4301-bd85-015ede8c9458")
                        });
                });

            modelBuilder.Entity("BiddingAPI.Models.CurrentValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("CurrentPrice")
                        .HasColumnType("float");

                    b.Property<int>("ProdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Currentvalue");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrentPrice = 1000.0,
                            ProdId = 1
                        },
                        new
                        {
                            Id = 2,
                            CurrentPrice = 2000.0,
                            ProdId = 2
                        },
                        new
                        {
                            Id = 3,
                            CurrentPrice = 150.0,
                            ProdId = 3
                        },
                        new
                        {
                            Id = 4,
                            CurrentPrice = 5000.0,
                            ProdId = 4
                        },
                        new
                        {
                            Id = 5,
                            CurrentPrice = 200.0,
                            ProdId = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
